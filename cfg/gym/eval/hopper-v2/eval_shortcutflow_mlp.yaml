defaults:
  - _self_
hydra:
  run:  
    dir: ${logdir}
_target_: agent.eval.eval_shortcutflow_agent.EvalShortCutFlowAgent

name: ${env_name}_eval_diffusion_mlp_ta${horizon_steps}_td${denoising_steps}
logdir: ${oc.env:DPPO_LOG_DIR}/gym-eval/${name}/${now:%Y-%m-%d}_${now:%H-%M-%S}_${seed}

base_policy_path: /home/zhangtonghe/dppo/log/gym-pretrain/gym-pretrain/hopper-medium-v2_pre_shortcutflow_mlp_ta4_td16/2024-11-26_17-42-54_42/checkpoint/state_480.pt

normalization_path: ${oc.env:DPPO_DATA_DIR}/gym/${env_name}/normalization.npz

seed: 42
device: cuda:3
env_name: hopper-medium-v2
obs_dim: 11
action_dim: 3
act_min: -1
act_max: 1
denoising_steps: 16
cond_steps: 1
horizon_steps: 4
act_steps: 4

n_steps: 500  # each episode can take maximum (max_episode_steps / act_steps, =250 right now) steps but may finish earlier in gym. We only count episodes finished within n_steps for evaluation.
render_num: 0

env:
  n_envs: 50
  name: ${env_name}
  max_episode_steps: 1000
  reset_at_iteration: False
  save_video: False
  best_reward_threshold_for_success: 3  # success rate not relevant for gym tasks
  wrappers:
    mujoco_locomotion_lowdim:
      normalization_path: ${normalization_path}
    multi_step:
      n_obs_steps: ${cond_steps}
      n_action_steps: ${act_steps}
      max_episode_steps: ${env.max_episode_steps}
      reset_within_step: True

model:
  _target_: model.flow.shortcut_flow.ShortCutFlow
  network:
    _target_: model.flow.mlp_flow.FlowMLP    # no visual inputs
    # network_path: ${base_policy_path}
    action_dim: ${action_dim}
    horizon_steps: ${horizon_steps}
    cond_dim: ${eval:'${obs_dim} * ${cond_steps}'}   # for mujoco tasks, the condition is the stacked observation
    time_dim: 16    # the dimension of the embedding of t
    dt_base_dim: 16 # the dimension of the embedding of dt_base
    mlp_dims: [512, 512, 512]
    activation_type: ReLU
    out_activation_type: Identity
    use_layernorm: False
    residual_style: True
  device: ${device}
  horizon_steps: ${horizon_steps}
  action_dim: ${action_dim}
  act_min: ${act_min}
  act_max: ${act_max}
  obs_dim: ${obs_dim}
  max_denoising_steps: ${denoising_steps}
  seed: ${seed}