defaults:
  - _self_
hydra:
  run:  
    dir: ${logdir}
_target_: agent.finetune.rl_finetune.runner.RLrunner

name: ${env_name}_finetune_td3_reflow_mlp_ta${horizon_steps}_td${denoising_steps}

base_dir: /mnt/d/Research/0-Robotics/Grad_Thesis_Diffusion_Robots/1-code/0-dppo-video-mujoco
base_policy_path: ${base_dir}/log/hopper/reflow/41-19-42/best.pt
normalization_path: ${oc.env:DPPO_DATA_DIR}/gym/${env_name}/normalization.npz


logdir: ${oc.env:DPPO_LOG_DIR}/gym-finetune/${name}/${now:%Y-%m-%d}_${now:%H-%M-%S}_${seed}  #required by hydra


seed: 42
device: cpu
benchmark: gym
env_name: hopper-medium-v2

cond_steps: 1
obs_dim: 11

horizon_steps: 4
act_steps: 4
action_dim: 3

denoising_steps: 20


batch_size: 128
n_rollout_steps: 500 # steps in a single rollout (episode), contains resets. 


env:
  n_envs: 40 # 10
  benchmark: ${benchmark}
  name: ${env_name}
  max_episode_steps: 1000
  reset_at_iteration: False
  best_reward_threshold_for_success: 3  # success rate not relevant for gym tasks
  wrappers:
    mujoco_locomotion_lowdim:
      normalization_path: ${normalization_path}
    multi_step:
      n_obs_steps: ${cond_steps}
      n_action_steps: ${act_steps}
      max_episode_steps: ${env.max_episode_steps}
      reset_within_step: True

train:
  n_train_itr: 10
  log_interval: 1
  eval_interval: 1
  save_interval: 1

agent:
  _target_: agent.finetune.rl_finetune.algorithm.td3_reflow.TD3ReFlow
  actor:
    _target_: model.flow.reflow.ReFlow
    network_path: ${base_policy_path}
    network:
      _target_: model.diffusion.mlp_diffusion.DiffusionMLP
      horizon_steps: ${horizon_steps}
      action_dim: ${action_dim}
      cond_dim: ${eval:'${obs_dim} * ${cond_steps}'}
      time_dim: 16 # 128
      mlp_dims: [512, 512, 512]
      activation_type: ReLU
      out_activation_type: Identity
      use_layernorm: False #True
      residual_style: True
    device: ${device}
    horizon_steps: ${horizon_steps}
    action_dim: ${action_dim}
    act_min: -1
    act_max: 1 
    obs_dim: ${obs_dim}
    max_denoising_steps: ${denoising_steps}
    seed: ${seed}
    batch_size: ${batch_size}
  critic:
    _target_: model.common.critic.CriticObs
    cond_dim: ${eval:'${obs_dim} * ${cond_steps}'}
    mlp_dims: [256, 256, 256]
    activation_type: Mish
    residual_style: True
  device: ${device}
  lr_actor:  5.0e-4
  lr_critic:  5.0e-4
  gamma: 0.99
  tau: 0.005
  target_update_interval: 1
  policy_update_interval: 2
  policy_noise: 0.1
  noise_clip: 0.3
  eps_schedule: linear(1, 0.05, 1000, 100000)
  nstep: ${buffer.nstep}

buffer:
  _target_: agent.finetune.rl_finetune.buffer.ReplayBufferParallelHighdim
  capacity: 16384
  use_per: False
  use_ppo: False  # True
  use_replay_parallel_high_dim: True
  nstep: 1
  gamma: ${agent.gamma}
  per_alpha: 0.7
  per_beta: 0.4
  per_eps: 0.01
  gae_lambda: 0.95
  num_envs: ${env.n_envs}
  


wandb:
  entity: ${oc.env:DPPO_WANDB_ENTITY}
  project: ${benchmark}-${env_name}-finetune
  run: ${now:%H-%M-%S}_${name}