defaults:
  - _self_
hydra:
  run:  
    dir: ${logdir}
_target_: agent.finetune.train_ppo_flow_agent.TrainPPOFlowAgent

name: ${env_name}_ppo_reflow_mlp_ta${horizon_steps}_td${denoising_steps}_flowppo_2k
logdir: ${oc.env:DPPO_LOG_DIR}/gym/gym-finetune/${name}/${now:%Y-%m-%d}_${now:%H-%M-%S}_${seed}
base_policy_path: ${oc.env:DPPO_LOG_DIR}/gym/gym-pretrain/ant-medium-expert-v0_pre_reflow_mlp_ta4_td20/2024-12-27_11-02-30_42/checkpoint/best.pt
normalization_path: ${oc.env:DPPO_DATA_DIR}/gym/${env_name}/normalization.npz

seed: 42
device: cuda:7
env_name: ant-medium-expert-v0
obs_dim: 111
action_dim: 8
denoising_steps: 4 #be careful, 20 denoising steps not sure yet even when not learning noiser net. 20 steps gives you 1_000 inital reward while steps =4 gives you 400
cond_steps: 1
horizon_steps: 4
act_steps: 4

env:
  n_envs: 40
  name: ${env_name}
  max_episode_steps: 1000
  reset_at_iteration: False
  save_video: False
  best_reward_threshold_for_success: 3  # success rate not relevant for gym tasks
  wrappers:
    mujoco_locomotion_lowdim:
      normalization_path: ${normalization_path}
    multi_step:
      n_obs_steps: ${cond_steps}
      n_action_steps: ${act_steps}
      max_episode_steps: ${env.max_episode_steps}
      reset_within_step: True

wandb:
  entity: ${oc.env:DPPO_WANDB_ENTITY}
  project: gym-${env_name}-finetune
  run: ${now:%H-%M-%S}_${name}

train:
  n_train_itr: 1000
  n_critic_warmup_itr: 0
  n_steps: 500
  gamma: 0.99

  actor_lr: 3e-5              #
  actor_weight_decay: 0

  actor_lr_scheduler:
    type: cosine
    first_cycle_steps: 100    #1000    #
    warmup_steps: 10
    min_lr: 1e-5              #1e-4 5e-4 #

  critic_lr: 5e-4
  critic_weight_decay: 1e-5

  critic_lr_scheduler:
    type: cosine
    first_cycle_steps: 100    #1000
    warmup_steps: 10
    min_lr: 5e-4              #1e-4 #1e-3

  save_model_freq: 100
  val_freq: 10
  render:
    freq: 1
    num: 0
  
  # PPO specific
  reward_scale_running: True
  reward_scale_const: 1.0
  gae_lambda: 0.95
  batch_size: 10_000        # 10_000 #50000
  update_epochs: 5
  vf_coef: 0.5
  ent_coef: -1.3            #0.01

  target_kl: 1.0            #1.0
  lr_schedule: fixed

  # max_grad_norm: 1.0      #1.0

model:
  _target_: model.flow.ft_ppo.ppoflow.PPOFlow
  device: ${device}
  policy:
    _target_: model.flow.mlp_flow.FlowMLP
    horizon_steps: ${horizon_steps}
    action_dim: ${action_dim}
    cond_dim: ${eval:'${obs_dim} * ${cond_steps}'}
    time_dim: 16                # 128
    mlp_dims: [512, 512, 512]   #[512, 1024, 512]
    activation_type: ReLU
    out_activation_type: Identity
    use_layernorm: False        #True
    residual_style: true
  critic:
    _target_: model.common.critic.CriticObs
    cond_dim: ${eval:'${obs_dim} * ${cond_steps}'}
    mlp_dims: [128, 128, 128]
    activation_type: Mish
    residual_style: True
  actor_policy_path: ${base_policy_path}
  act_dim: ${action_dim}
  horizon_steps: ${horizon_steps}
  act_min: -1
  act_max: 1
  obs_dim: ${obs_dim}
  cond_steps: ${cond_steps}
  noise_scheduler_type: lin         #vp
  inference_steps: ${denoising_steps}
  randn_clip_value: 3
  min_sampling_denoising_std: 0.08  #0.1
  min_logprob_denoising_std: 0.08   #0.1 #1e-20 makes actor loss goes to nan, not sure why yet.
  logprob_min: -1.0                 #new stuff
  logprob_max: 1.0                  #new stuff  this value only works for 4 steps. 
  clip_ploss_coef: 0.01
  clip_ploss_coef_base: 0.01
  clip_ploss_coef_rate: 3
  clip_vloss_coef: null
  denoised_clip_value: 1.0
  max_logprob_denoising_std: 1.0    #new stuff
  time_dim_explore: 0               # new stuff
  learn_explore_time_embedding: False
  learn_explore_noise_from: ${denoising_steps}       # new stuff. when selected as denoising steps, same as fix all noise.
  init_time_embedding: True